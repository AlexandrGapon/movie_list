{"version":3,"sources":["UI/Pagination/Pagination.module.css","UI/Loader/Loader.module.css","UI/PrimaryButton/PrimaryButton.module.css","store/reducers/movies/actions.js","UI/Pagination/Pagination.jsx","utils/pagesCreator.js","UI/Loader/Loader.jsx","UI/PrimaryButton/PrimaryButton.jsx","components/Movie.jsx","components/MovieList.jsx","pages/MainPage.jsx","store/reducers/comments/actions.js","utils/parseData.js","components/Comment.jsx","components/CommentList.jsx","pages/CommentsPage.jsx","components/App.jsx","store/reducers/comments/index.js","store/reducers/movies/index.js","store/reducers/index.js","store/sagas/movies/index.js","store/sagas/index.js","store/index.js","index.js"],"names":["module","exports","LOAD_MOVIES","LOAD_MOVIES_SUCCESS","LOAD_MOVIES_FAILURE","Pagination","itemsCount","currentPage","perPage","dispatch","useDispatch","pages","pagesCount","Math","ceil","i","push","createPages","className","cl","pagination","map","p","pagination__item_current","pagination__item","onClick","type","payload","page","limit","Loader","loader__container","loader","PrimaryButton","children","handleClick","button","Movie","title","year","language","genres","runtime","rating","movieId","router","useHistory","g","index","MovieList","movies","useSelector","state","movie","id","MainPage","moviesCount","isLoading","ADD_COMMENT","DELETE_COMMENT","parseMovies","data","item","hasOwnProperty","title_english","coverUrl","large_cover_image","replace","Comment","body","date","Date","getDate","getMonth","getFullYear","getHours","getMinutes","parseDate","CommentList","movieComments","length","comment","CommentsPage","comments","useState","value","setValue","location","pathname","url","getMovieInfo","filter","src","alt","onChange","e","target","placeholder","now","to","App","useEffect","exact","path","component","initialCommentsState","initialMoviesState","error","rootReducer","combineReducers","action","movie_count","loadMoviesList","moviesSaga","call","fetch","request","apply","json","put","takeEvery","rootSaga","all","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2f3a55fa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"Pagination_pagination__cMpN8\",\"pagination__item\":\"Pagination_pagination__item__2Sico\",\"pagination__item_current\":\"Pagination_pagination__item_current__10ZZO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader__container\":\"Loader_loader__container__3ELGZ\",\"loader\":\"Loader_loader__1BNN0\",\"rotate\":\"Loader_rotate__1oJGg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"PrimaryButton_button__1gsF1\"};","export const LOAD_MOVIES = 'LOAD_MOVIES'\r\nexport const LOAD_MOVIES_SUCCESS = 'LOAD_MOVIES_SUCCESS'\r\nexport const LOAD_MOVIES_FAILURE = 'LOAD_MOVIES_FAILURE'","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { LOAD_MOVIES } from '../../store/reducers/movies/actions'\r\nimport { createPages } from '../../utils/pagesCreator'\r\nimport cl from './Pagination.module.css'\r\n\r\nconst Pagination = ({ itemsCount, currentPage, perPage }) => {\r\n    const dispatch = useDispatch()\r\n    const pages = []\r\n    let pagesCount = 1\r\n\r\n    if (itemsCount > perPage) {\r\n        pagesCount = Math.ceil(itemsCount / perPage)\r\n    }\r\n\r\n    if (pagesCount > 1) {\r\n        createPages(pages, pagesCount, currentPage)\r\n    }\r\n\r\n    return (\r\n        <div className={cl.pagination}>\r\n            {pages.map(p => (<span\r\n                key={p}\r\n                className={p === currentPage ? cl.pagination__item_current : cl.pagination__item}\r\n                onClick={() => dispatch({ type: LOAD_MOVIES, payload: { page: p, limit: perPage } })}\r\n            >{p}</span>))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pagination","export function createPages(pages, pagesCount, currentPage) {\r\n    if (pagesCount > 10) {\r\n        if (currentPage > 5 && currentPage < pagesCount - 4) {\r\n            for (let i = currentPage - 4; i <= currentPage + 5; i++) {\r\n                pages.push(i)\r\n                if (i === pagesCount) break\r\n            }\r\n        } else if (currentPage >= pagesCount - 4) {\r\n            for (let i = pagesCount - 9; i <= pagesCount; i++) {\r\n                pages.push(i)\r\n            }\r\n        } else {\r\n            for (let i = 1; i <= 10; i++) {\r\n                pages.push(i)\r\n                if (i === pagesCount) break\r\n            }\r\n        }\r\n    } else {\r\n        for (let i = 1; i <= pagesCount; i++) {\r\n            pages.push(i)\r\n        }\r\n    }\r\n}","import React from 'react'\r\nimport cl from './Loader.module.css'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className={cl.loader__container}>\r\n            <div className={cl.loader}>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader","import React from 'react'\r\nimport cl from './PrimaryButton.module.css'\r\n\r\nconst PrimaryButton = ({ children, handleClick }) => {\r\n    return (\r\n        <button className={cl.button} onClick={handleClick}>{children}</button>\r\n    )\r\n}\r\n\r\nexport default PrimaryButton","import React from 'react'\r\nimport { useHistory } from 'react-router'\r\nimport '../styles/Movie.css'\r\nimport PrimaryButton from '../UI/PrimaryButton/PrimaryButton'\r\n\r\nconst Movie = ({ title, year, language, genres, runtime, rating, movieId }) => {\r\n    const router = useHistory()\r\n\r\n    const handleClick = () => {\r\n        router.push(`/comments/${movieId}`)\r\n    }\r\n\r\n    return (\r\n        <tr className='movie'>\r\n            <td className='titleColumn'>{title}</td>\r\n            <td className='yearColumn'>{year}</td>\r\n            <td className='languageColumn'>{language}</td>\r\n            <td className='genresColumn'>{genres ? genres.map((g, index) => <span key={index}>{g}<br /></span>) : '-'}</td>\r\n            <td className='runtimeColumn'>{runtime === 0 ? '-' : runtime}</td>\r\n            <td className='ratingColumn'>{rating === 0 ? '-' : rating}</td>\r\n            <td className='buttonColumn'><PrimaryButton handleClick={handleClick}>Comments</PrimaryButton></td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default Movie","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport Movie from './Movie'\r\n\r\nconst MovieList = () => {\r\n    const { movies } = useSelector(state => state.movies)\r\n\r\n    return (\r\n        <table className='movieList'>\r\n            <thead>\r\n                <tr>\r\n                    <td>Title</td>\r\n                    <td>Year</td>\r\n                    <td>Language</td>\r\n                    <td>Genres</td>\r\n                    <td>Runtime</td>\r\n                    <td>Rating</td>\r\n                    <td></td>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {movies.map(movie => <Movie\r\n                    key={movie.id}\r\n                    movieId={movie.id}\r\n                    title={movie.title}\r\n                    year={movie.year}\r\n                    language={movie.language}\r\n                    genres={movie.genres}\r\n                    runtime={movie.runtime}\r\n                    rating={movie.rating}\r\n                />)}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default MovieList","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport '../styles/MainPage.css'\r\nimport Pagination from '../UI/Pagination/Pagination'\r\nimport Loader from '../UI/Loader/Loader'\r\nimport MovieList from '../components/MovieList'\r\n\r\nconst MainPage = () => {\r\n    const { page, limit, moviesCount, isLoading } = useSelector(state => state.movies)\r\n\r\n    return (\r\n        <div>\r\n            <h1 className='title'>Movie List</h1>\r\n            {isLoading ? <Loader /> : <MovieList />}\r\n            {!isLoading &&\r\n                <Pagination\r\n                    itemsCount={moviesCount}\r\n                    currentPage={page}\r\n                    perPage={limit}\r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainPage","export const ADD_COMMENT = 'ADD_COMMENT'\r\nexport const DELETE_COMMENT = 'DELETE_COMMENT'","export const parseMovies = (data) => {\r\n    return data.map(item => {\r\n        const movie = {}\r\n        if (item.hasOwnProperty('id')) {\r\n            movie.id = item.id\r\n        }\r\n        if (item.hasOwnProperty('title_english')) {\r\n            movie.title = item.title_english\r\n        } else {\r\n            movie.title = item.title\r\n        }\r\n        if (item.hasOwnProperty('runtime')) {\r\n            movie.runtime = item.runtime\r\n        }\r\n        if (item.hasOwnProperty('year')) {\r\n            movie.year = item.year\r\n        }\r\n        if (item.hasOwnProperty('rating')) {\r\n            movie.rating = item.rating\r\n        }\r\n        if (item.hasOwnProperty('language')) {\r\n            movie.language = item.language\r\n        }\r\n        if (item.hasOwnProperty('genres')) {\r\n            movie.genres = item.genres\r\n        }\r\n        if (item.hasOwnProperty('large_cover_image')) {\r\n            movie.coverUrl = item.large_cover_image.replace('large-cover.jpg', '')\r\n        }\r\n        return movie\r\n    })\r\n}\r\n\r\nexport const parseComments = (data, id) => {\r\n    return data.filter(item => item.movieId === id)\r\n}\r\n\r\nexport const getMovieInfo = (data, id) => {\r\n    let url = null\r\n    let title = null\r\n    let year = null\r\n\r\n    for (let i = 0; i < data.length; i++) {\r\n        if (data[i].id === +id) {\r\n            url = data[i].coverUrl\r\n            title = data[i].title\r\n            year = data[i].year\r\n        }\r\n    }\r\n\r\n    return { url, title, year }\r\n}\r\n\r\nexport const parseDate = (id) => {\r\n    let date = new Date(id)\r\n    return `${date.getDate()}.${date.getMonth() + 1}.${date.getFullYear()} ${date.getHours()}:${date.getMinutes()}`\r\n}","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { DELETE_COMMENT } from '../store/reducers/comments/actions'\r\nimport '../styles/Comment.css'\r\nimport PrimaryButton from '../UI/PrimaryButton/PrimaryButton'\r\nimport { parseDate } from '../utils/parseData'\r\n\r\nconst Comment = ({ id, body }) => {\r\n    const dispatch = useDispatch()\r\n    let date = parseDate(id)\r\n\r\n    const removeComment = () => {\r\n        dispatch({\r\n            type: DELETE_COMMENT,\r\n            payload: id\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className='comment'>\r\n            <div className='comment__body'>\r\n                <div className='comment__date'>\r\n                    {date}\r\n                </div>\r\n                <div className='comment__text'>\r\n                    {body}\r\n                </div>\r\n            </div>\r\n            <PrimaryButton handleClick={removeComment}>Delete</PrimaryButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Comment","import React from 'react'\r\nimport '../styles/CommentList.css'\r\nimport Comment from './Comment'\r\n\r\nconst CommentList = ({ movieComments }) => {\r\n    if (movieComments.length === 0) {\r\n        return (\r\n            <div className='noncomments'>\r\n                <h2>No comments yet</h2>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {movieComments.map(comment => <Comment\r\n                key={comment.id}\r\n                id={comment.id}\r\n                body={comment.body}\r\n            />\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CommentList","import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router'\r\nimport { ADD_COMMENT } from '../store/reducers/comments/actions'\r\nimport { getMovieInfo, parseComments } from '../utils/parseData'\r\nimport '../styles/CommentsPage.css'\r\nimport PrimaryButton from '../UI/PrimaryButton/PrimaryButton'\r\nimport CommentList from '../components/CommentList'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst CommentsPage = () => {\r\n    const router = useHistory()\r\n    const dispatch = useDispatch()\r\n    const { comments } = useSelector(state => state.comments)\r\n    const { movies } = useSelector(state => state.movies)\r\n    const [value, setValue] = useState('')\r\n\r\n    const movieId = router.location.pathname.replace('/comments/', '')\r\n    let { url: coverUrl, title, year } = getMovieInfo(movies, movieId)\r\n    let movieComments = parseComments(comments, movieId)\r\n\r\n    const addComment = () => {\r\n        dispatch({\r\n            type: ADD_COMMENT,\r\n            payload: {\r\n                movieId,\r\n                id: Date.now(),\r\n                body: value\r\n            }\r\n        })\r\n        setValue('')\r\n    }\r\n\r\n    return (\r\n        <div className='commentsPage'>\r\n            <div className='comments__header'>\r\n                <div>\r\n                    <div className='comments__title'>{`${title} (${year})`}</div>\r\n                    {coverUrl && <img src={`${coverUrl}medium-cover.jpg`} alt='Movie cover' />}\r\n                </div>\r\n                <div className='comment__form'>\r\n                    <textarea\r\n                        value={value}\r\n                        onChange={(e) => setValue(e.target.value)}\r\n                        placeholder='Write your comment'\r\n                    />\r\n                    {value && <PrimaryButton handleClick={addComment}>Add comment</PrimaryButton>}\r\n                </div>\r\n                <Link className='backLink' to={'/'}>To Movie List</Link>\r\n            </div>\r\n            <CommentList movieComments={movieComments} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CommentsPage","import { useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport '../styles/App.css'\nimport { LOAD_MOVIES } from '../store/reducers/movies/actions'\nimport MainPage from '../pages/MainPage'\nimport { Switch, Route, HashRouter, Redirect } from 'react-router-dom'\nimport CommentsPage from '../pages/CommentsPage'\n\nfunction App() {\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch({\n      type: LOAD_MOVIES,\n      payload: {\n        page: 1,\n        limit: 10\n      }\n    })\n  }, [dispatch])\n\n  return (\n    <div className='app'>\n      <HashRouter>\n        <Switch>\n          <Route exact path='/' component={MainPage} />\n          <Route exact path='/comments/:id' component={CommentsPage} />\n          <Redirect to='/' />\n        </Switch>\n      </HashRouter>\n    </div>\n  )\n}\n\nexport default App\n","import { ADD_COMMENT, DELETE_COMMENT } from './actions'\r\n\r\n\r\nconst initialCommentsState = {\r\n    comments: []\r\n}\r\n\r\nexport const commentsReducer = (state = initialCommentsState, action) => {\r\n    switch (action.type) {\r\n        case ADD_COMMENT:\r\n            const { movieId, id, body } = action.payload\r\n\r\n            return {\r\n                ...state,\r\n                comments: [...state.comments, {\r\n                    movieId: movieId,\r\n                    id: id,\r\n                    body: body\r\n                }]\r\n            }\r\n\r\n        case DELETE_COMMENT:\r\n            return {\r\n                state,\r\n                comments: state.comments.filter(comment => comment.id !== action.payload)\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { parseMovies } from '../../../utils/parseData'\r\nimport { LOAD_MOVIES, LOAD_MOVIES_FAILURE, LOAD_MOVIES_SUCCESS } from './actions'\r\n\r\n\r\nconst initialMoviesState = {\r\n    page: 1,\r\n    limit: 10,\r\n    moviesCount: null,\r\n    isLoading: false,\r\n    error: null,\r\n    movies: []\r\n}\r\n\r\nexport const moviesReducer = (state = initialMoviesState, action) => {\r\n    switch (action.type) {\r\n        case LOAD_MOVIES:\r\n            const {page, limit} = action.payload\r\n\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n                page,\r\n                limit\r\n            }\r\n        \r\n        case LOAD_MOVIES_SUCCESS:\r\n            const {movies, movie_count} = action.payload\r\n            \r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                moviesCount: movie_count,\r\n                movies: parseMovies(movies)\r\n            }\r\n\r\n        case LOAD_MOVIES_FAILURE:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux'\r\nimport { commentsReducer } from './comments'\r\nimport { moviesReducer } from './movies'\r\n\r\nexport const rootReducer = combineReducers({\r\n    movies: moviesReducer,\r\n    comments: commentsReducer\r\n})","import { call, apply, takeEvery, put } from 'redux-saga/effects'\r\nimport { LOAD_MOVIES, LOAD_MOVIES_FAILURE, LOAD_MOVIES_SUCCESS } from '../../reducers/movies/actions'\r\n\r\nexport function* loadMoviesList({ payload }) {\r\n    const { page, limit } = payload\r\n\r\n    try {\r\n        const request = yield call(\r\n            fetch,\r\n            `https://yts.mx/api/v2/list_movies.json?page=${page}&limit=${limit}`\r\n        )\r\n        const data = yield apply(request, request.json)\r\n        yield put({\r\n            type: LOAD_MOVIES_SUCCESS,\r\n            payload: data.data\r\n        })\r\n    } catch (error) {\r\n        yield put({\r\n            type: LOAD_MOVIES_FAILURE,\r\n            payload: error\r\n        })\r\n    }\r\n}\r\n\r\nexport function* moviesSaga() {\r\n    yield takeEvery(LOAD_MOVIES, loadMoviesList)\r\n}","import { all } from 'redux-saga/effects'\r\nimport { moviesSaga } from './movies'\r\n\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        moviesSaga()\r\n    ])\r\n}","import { applyMiddleware, createStore } from 'redux'\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport { rootReducer } from './reducers'\r\nimport rootSaga from './sagas'\r\n\r\nconst sagaMiddleware = createSagaMiddleware()\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(sagaMiddleware))\r\n\r\nsagaMiddleware.run(rootSaga)","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './styles/index.css'\nimport App from './components/App'\nimport { Provider } from 'react-redux'\nimport {store} from './store/index'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}